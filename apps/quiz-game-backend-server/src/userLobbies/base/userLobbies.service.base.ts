/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  UserLobbies as PrismaUserLobbies,
  Lobbies as PrismaLobbies,
  User as PrismaUser,
} from "@prisma/client";

export class UserLobbiesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserLobbiesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userLobbies.count(args);
  }

  async userLobbiesItems(
    args: Prisma.UserLobbiesFindManyArgs
  ): Promise<PrismaUserLobbies[]> {
    return this.prisma.userLobbies.findMany(args);
  }
  async userLobbies(
    args: Prisma.UserLobbiesFindUniqueArgs
  ): Promise<PrismaUserLobbies | null> {
    return this.prisma.userLobbies.findUnique(args);
  }
  async createUserLobbies(
    args: Prisma.UserLobbiesCreateArgs
  ): Promise<PrismaUserLobbies> {
    return this.prisma.userLobbies.create(args);
  }
  async updateUserLobbies(
    args: Prisma.UserLobbiesUpdateArgs
  ): Promise<PrismaUserLobbies> {
    return this.prisma.userLobbies.update(args);
  }
  async deleteUserLobbies(
    args: Prisma.UserLobbiesDeleteArgs
  ): Promise<PrismaUserLobbies> {
    return this.prisma.userLobbies.delete(args);
  }

  async getLobby(parentId: string): Promise<PrismaLobbies | null> {
    return this.prisma.userLobbies
      .findUnique({
        where: { id: parentId },
      })
      .lobby();
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.userLobbies
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
